apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-event-bridge
  namespace: rag-pipeline-workshop
  labels:
    app: minio-event-bridge
    app.kubernetes.io/instance: minio-event-bridge
    app.kubernetes.io/part-of: rag-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-event-bridge
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: minio-event-bridge
        app.kubernetes.io/part-of: rag-pipeline
    spec:
      containers:
      - name: event-bridge
        image: quay.io/cnuland/hello-chris-rag-pipeline-converter:latest
        imagePullPolicy: Always
        command: ["gunicorn"]
        args: ["--bind", "0.0.0.0:8080", "--log-level", "debug", "--capture-output", "--error-logfile", "-", "--access-logfile", "-", "app:app"]
        env:
        - name: BROKER_URL
          value: "http://kafka-broker-ingress.knative-eventing.svc.cluster.local/rag-pipeline-workshop/kafka-broker"
        - name: LOG_LEVEL
          value: "DEBUG"
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
