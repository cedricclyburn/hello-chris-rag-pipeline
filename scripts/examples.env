# -----------------------------------------------------------------------------
# Example Environment Variables for RAG Pipeline Workshop
#
# Save this as .env and source it (source .env) or use it as a reference.
# ** IMPORTANT: Replace placeholder values marked with # CHANGEME **
# -----------------------------------------------------------------------------

# === MinIO Server Connection Details (for mc client and setup_minio_events.sh) ===
# URL of your MinIO server (e.g., from an OpenShift Route)
MINIO_SERVER_URL="https://minio-s3-minio.apps.cluster-6wqbq.6wqbq.sandbox842.opentlc.com" # CHANGEME to your MinIO Route/IP
# Access key for your MinIO server (user with permissions to create buckets and set notifications)
MINIO_ACCESS_KEY="minio" # CHANGEME (use the value from your minio-root-user secret)
# Secret key for your MinIO server
MINIO_SECRET_KEY="minio123"
# Alias name to be used by the MinIO client (mc)
MC_ALIAS_NAME="osminio"

# === MinIO Bucket and Event Notification Configuration (for setup_minio_events.sh) ===
# Bucket to be created in MinIO and monitored for PDF uploads
TARGET_BUCKET_NAME="pdf-inbox"
# This ID MUST EXACTLY MATCH the <YOUR_ID> suffix used in the MinIO server's
# MINIO_NOTIFY_KAFKA_ENABLE_<YOUR_ID>, MINIO_NOTIFY_KAFKA_BROKERS_<YOUR_ID>, etc.
# environment variables. Based on your MinIO deployment, this should be "MYMINIOKAFKA".
KAFKA_TARGET_ID_IN_MINIO="MYMINIOKAFKA"

# === Kafka Cluster Details (referenced by MinIO server deployment and Knative KafkaSource) ===
# Namespace where your Kafka cluster (e.g., my-kafka-cluster) is deployed
KAFKA_NAMESPACE="kafka"
# Name of your Kafka cluster (defined in the kafka.strimzi.io/v1beta2 Kafka CRD)
KAFKA_CLUSTER_NAME="kafka-cluster"
# Internal Kubernetes bootstrap service URL for Kafka (used by MinIO server and Knative KafkaSource)
# Format: <kafka-cluster-name>-kafka-bootstrap.<kafka-namespace>.svc.cluster.local:<port>
KAFKA_BOOTSTRAP_SERVERS="${KAFKA_CLUSTER_NAME}-kafka-bootstrap.${KAFKA_NAMESPACE}.svc.cluster.local:9092"
# Kafka topic for MinIO events (must match MINIO_NOTIFY_KAFKA_TOPIC_... in MinIO deployment and KafkaSource)
MINIO_EVENTS_KAFKA_TOPIC="minio-bucket-notifications"

# === S3 Event Handler (Knative Service / KFP Trigger) Configuration ===
# Namespace where the s3-event-handler Knative service and other serverless components run
SERVERLESS_NAMESPACE="rag-pipeline-workshop" # CHANGEME to your actual serverless project namespace
# Kubeflow Pipelines API endpoint
# Example: http://ds-pipeline-pipelines-definition.your-openshift-ai-project.svc.cluster.local:8888
# OR an external route if applicable
KFP_ENDPOINT="http://ds-pipeline-pipelines-definition.your-osai-project.apps.your-cluster.com" # CHANGEME
# Name of the Kubeflow Pipeline to trigger (as uploaded to KFP UI)
KFP_PIPELINE_NAME="Simple PDF Processing Pipeline" # CHANGEME if you named your KFP differently
# Name of the KFP Experiment to run pipelines under
KFP_EXPERIMENT_NAME="S3 Triggered PDF Runs"

# === Other Project Namespaces (for reference/consistency when applying YAMLs) ===
# Namespace where the ServiceNow Mock API is deployed
API_NAMESPACE="your-api-project" # CHANGEME
# Namespace where MinIO deployment itself runs (as per services/minio/namespace.yaml)
MINIO_NAMESPACE="minio"
# Namespace for Tekton pipeline resources (Pipeline, Task, PVC etc.)
TEKTON_NAMESPACE="your-tekton-pipelines-namespace" # Often same as serverless or API namespace, or dedicated
# Namespace where ArgoCD Application CRDs are deployed (usually 'argocd' itself)
ARGOCD_APPS_NAMESPACE="openshift-gitops" # Or 'openshift-gitops' if using OpenShift GitOps Operator default

# === Git Repository (for ArgoCD Applications) ===
# URL to your Git repository where all these manifests are stored
GIT_REPO_URL="https://github.com/cnuland/hello-chris-rag-pipeline.git" # CHANGEME to your Git repo URL
# Default branch/tag/commit for ArgoCD to track
GIT_TARGET_REVISION="main" # Or HEAD, or your specific branch/tag
