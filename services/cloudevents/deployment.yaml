apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-cloudevents-service
  namespace: rag-pipeline-workshop
  labels:
    app: minio-cloudevents-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio-cloudevents-service
  template:
    metadata:
      labels:
        app: minio-cloudevents-service
    spec:
      containers:
      - name: minio-cloudevents-service
        image: radiorabe/minio-cloudevents-service:latest # Using the image from the GitHub repo
        ports:
        - containerPort: 8080 # Default port for the service
        env:
        - name: MINIO_WEBHOOK_SECRET_KEY # Used to validate incoming webhook signature from MinIO
          valueFrom:
            secretKeyRef:
              name: minio-cloudevents-webhook-secret
              key: MINIO_WEBHOOK_SECRET_KEY
        - name: K_SINK # The Knative Broker URL
          # This points to the 'default' broker in 'your-serverless-project'
          # Adjust if your broker or namespace is different.
          value: "http://default-broker.your-serverless-project.svc.cluster.local" # CHANGEME (namespace)
        - name: PORT
          value: "8080"
        - name: VERBOSE
          value: "true" # Enable for more logging
        - name: DEBUG
          value: "false"
        resources:
          limits:
            memory: "128Mi"
            cpu: "200m"
          requests:
            memory: "64Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health # Assuming it has a health endpoint, check service docs if not. Often just '/'
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health # Assuming it has a health endpoint
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10