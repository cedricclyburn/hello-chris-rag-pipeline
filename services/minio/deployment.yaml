---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        image: quay.io/minio/minio:RELEASE.2023-06-19T19-52-50Z
        env:
        - name: MINIO_NOTIFY_KAFKA_ENABLE_MYMINIOKAFKA # Using "MYMINIOKAFKA" as <YOUR_ID>
          value: "on"
        - name: MINIO_NOTIFY_KAFKA_BROKERS_MYMINIOKAFKA
          # This is the internal bootstrap service for your Kafka cluster
          value: "my-kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092" # Ensure 'kafka' is the correct namespace for your Kafka cluster
        - name: MINIO_NOTIFY_KAFKA_TOPIC_MYMINIOKAFKA
          value: "minio-bucket-notifications" # The Kafka topic you created
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-creds # Assuming this secret exists in the 'minio' namespace
              key: rootUser
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-creds
              key: rootPassword
        ports:
        - containerPort: 9000
          protocol: TCP
          name: api
        - containerPort: 9090
          protocol: TCP
          name: console
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 2Gi
        volumeMounts:
        - mountPath: /data
          name: minio
      volumes:
      - persistentVolumeClaim:
          claimName: minio
        name: minio