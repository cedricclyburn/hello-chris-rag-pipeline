apiVersion: apps/v1
kind: Deployment
metadata:
  name: vectordb-milvus-standalone
  labels:
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: vectordb
    component: "standalone"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: milvus
      app.kubernetes.io/instance: vectordb
      component: "standalone"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milvus
        app.kubernetes.io/instance: vectordb
        component: "standalone"
    spec:
      serviceAccountName: default
      initContainers:
        # This init container waits for the etcd service to be available before starting Milvus.
        - name: wait-for-etcd
          image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              set -e
              echo "Waiting for etcd service at vectordb-etcd-headless:2379..."
              until (exec 3<>/dev/tcp/vectordb-etcd-headless/2379) 2>/dev/null; do
                echo -n "."
                sleep 2
              done
              echo "Etcd service is available. Proceeding with Milvus startup."      
      containers:
        - name: standalone
          image: "quay.io/rh-data-services/milvus-openshift:v2.3.10"
          imagePullPolicy: IfNotPresent
          # The command now just runs standalone; config is sourced from the mounted ConfigMap.
          args: ["milvus", "run", "standalone"]
          ports:
            - name: milvus
              containerPort: 19530
              protocol: TCP
            - name: metrics
              containerPort: 9091
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: milvus-config
              mountPath: /milvus/configs/user.yaml
              subPath: user.yaml
              readOnly: true
            - name: milvus-data-disk
              mountPath: "/var/lib/milvus"
      volumes:
        - name: milvus-config
          configMap:
            name: vectordb-milvus
        - name: milvus-data-disk
          persistentVolumeClaim:
            claimName: vectordb-milvus
---