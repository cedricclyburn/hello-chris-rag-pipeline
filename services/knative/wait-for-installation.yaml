apiVersion: batch/v1
kind: Job
metadata:
  # This is a hook, so it should be created in the ArgoCD application's destination namespace
  # (e.g., 'knative-eventing' or 'rag-pipeline-workshop' depending on where you sync your base knative setup)
  # For this setup, 'knative-eventing' is appropriate.
  name: wait-for-knative-crds
  namespace: knative-eventing 
  annotations:
    # This tells ArgoCD to run this Job during the sync phase.
    # The wave will not be considered "Succeeded" until this Job completes successfully.
    argocd.argoproj.io/hook: Sync
    # We delete the hook after it runs so it doesn't clutter the cluster.
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    # Assign this hook to the same wave as the KnativeEventing CR.
    argocd.argoproj.io/sync-wave: "1"
spec:
  template:
    spec:
      # Use a service account that can get CRDs. The 'default' one in knative-eventing
      # may not have this permission. You might need to create a dedicated SA and RoleBinding.
      # For simplicity, we assume an SA with permissions exists or you will create one.
      serviceAccountName: default # CHANGE if you need a specific SA with permissions
      containers:
      - name: crd-checker
        image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for Knative CRDs to be installed by the operator..."
          # Wait for Broker CRD
          until oc get crd brokers.eventing.knative.dev &> /dev/null; do
            echo "Waiting for Broker CRD (brokers.eventing.knative.dev)..."; sleep 10;
          done
          echo "Broker CRD found."

          # Wait for Trigger CRD
          until oc get crd triggers.eventing.knative.dev &> /dev/null; do
            echo "Waiting for Trigger CRD (triggers.eventing.knative.dev)..."; sleep 10;
          done
          echo "Trigger CRD found."

          # Wait for KafkaSource CRD
          until oc get crd kafkasources.sources.knative.dev &> /dev/null; do
            echo "Waiting for KafkaSource CRD (kafkasources.sources.knative.dev)..."; sleep 10;
          done
          echo "KafkaSource CRD found."

          echo "All required Knative CRDs are present. Sync can continue."
      restartPolicy: Never
  backoffLimit: 2
