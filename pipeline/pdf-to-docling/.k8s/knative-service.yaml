apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: kfp-s3-trigger
  namespace: rag-pipeline-workshop
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "0"
        # How long to keep a pod after it scales to zero.
        autoscaling.knative.dev/scale-to-zero-pod-retention-period: "10m"
    spec:
      serviceAccountName: kfp-trigger-sa # SA for KFP interaction (defined in rbac.yaml)
      containers:
        - image: quay.io/cnuland/hello-chris-rag-pipeline-event:latest
          # Or, if using OpenShift internal registry:
          # image: image-registry.openshift-image-registry.svc:5000/your-serverless-project/s3-kfp-trigger:latest
          ports:
            - containerPort: 8080 # Port your application listens on
          env:
            - name: KFP_ENDPOINT
              # CHANGEME: Correct Kubeflow Pipelines API endpoint URL
              value: "http://ds-pipeline-your-osai-project.apps.your-cluster.com"
            - name: KFP_PIPELINE_NAME
              value: "Simple PDF Processing Pipeline" # Must match uploaded KFP pipeline name
            - name: KFP_EXPERIMENT_NAME
              value: "S3 Triggered PDF Runs"
          resources: # Define appropriate resources
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /healthz # Use the new health check endpoint
              port: 8080
            initialDelaySeconds: 10 # Slightly increased initial delay just in case
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz # Use the new health check endpoint
              port: 8080
            initialDelaySeconds: 20 # Slightly increased initial delay
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
